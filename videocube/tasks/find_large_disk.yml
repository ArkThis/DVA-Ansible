# tasks/find_large_disk.yml
---

- name: Run lsblk to gather disk information
  ansible.builtin.command:
    cmd: lsblk --json -o NAME,UUID,SIZE,TYPE,MOUNTPOINT --bytes
  register: lsblk_output
  failed_when:
    - lsblk_output.rc != 0
    - lsblk_output.stdout is not defined
    - lsblk_output.stdout == ''
  changed_when: false

- name: Debug raw lsblk output
  debug:
    msg: "{{ lsblk_output.stdout }}"
  when:
    - lsblk_output is defined
    - lsblk_output.stdout is defined

- name: Debug parsed lsblk JSON
  debug:
    msg: "{{ lsblk_output.stdout | from_json }}"
  when:
    - lsblk_output is defined
    - lsblk_output.stdout is defined

- name: Select unmounted disk of required size
  set_fact:
    selected_disk_name: "{{ item.name }}"
    selected_disk_uuid: "{{ item.uuid | default('') }}"
  loop: "{{ lsblk_output.stdout | from_json | json_query('blockdevices[?type == `disk` && (!children || children == null) && (!mountpoint || mountpoint == ``)]') }}"
  when:
    - lsblk_output is defined
    - lsblk_output.stdout is defined
    - item.size is defined
    - item.size | int >= 2199023255552  # 2TB in bytes
    - item is defined

- name: Debug selected disk
  debug:
    msg: "Selected disk: {{ selected_disk_name }} (UUID: {{ selected_disk_uuid }})"
  when: selected_disk_name is defined

- name: Fail if no suitable disk found
  ansible.builtin.fail:
    msg: "No unmounted disk with at least 2TB found."
  when: selected_disk_name is not defined
